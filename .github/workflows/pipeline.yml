# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.ibm.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

env:
  IBM_CLOUD_APIKEY: ${{ secrets.IBMCLOUD_APIKEY }}
  IBM_CLOUD_REGION: us-south
  IBM_CLOUD_RESOURCE_GROUP: Default
  REGISTRY_HOSTNAME: us.icr.io
  ICR_NAMESPACE: ${{ secrets.ICR_NAMESPACE }}
  IMAGE_NAME: berlinclock_julianostmo
  GITHUB_SHA: ${{ github.sha }}
  # PACT_BROKER_TOKEN: ${{ secrets.PACT_BROKER_TOKEN }}
  # REGISTRY_SECRET: ${{ secrets.REGISTRY_SECRET }}
  # APP_HOST: ${{ vars.APP_HOST }}

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  commitlint:
    name: Verify that the commit all follow the linting rules
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@master

  eslint-verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@master
      - name: Use Node.js 18.16.0
        uses: actions/checkout@master
      - run: npm ci
      - run: npm run lint:verify

  prettier-verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@master
      - name: Use Node.js 18.16.0
        uses: actions/checkout@master
      - run: npm ci
      - run: npm run prettier:verify

  detect-secrets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@master
      - name: Use Node.js 18.16.0
        uses: actions/checkout@master
      - run: npm ci
      - run: npm run detect-secrets $(git ls-files)

  snyk_test:
    runs-on: ubuntu-latest
    needs: [eslint-verify, prettier-verify]

    steps:
      - uses: actions/checkout@master
      - name: Use Node.js 18.16.0
        uses: snyk/actions/node@master
        env:
          # In order to use the Snyk Action you will need to have a Snyk API token.
          # More details in https://{{cookiecutter.github_url}}/snyk/actions#getting-your-snyk-token
          # or you can signup for free at https://snyk.io/login
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test

  test_and_coverage:
    runs-on: ubuntu-latest
    needs: [eslint-verify, prettier-verify]

    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
      - name: Use Node.js 18.16.0
        uses: warchant/setup-sonar-scanner@master
        with:
          node-version: 18.16.0
      - run: touch .env
      - run: npm ci
      - run: npm test
      - run: sonar-scanner
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: [test_and_coverage, snyk_test]
    steps:
      - name: Checkout
        uses: actions/checkout@master

      # Download and Install IBM Cloud CLI
      - name: Install IBM Cloud CLI
        run: |
          curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
          ibmcloud --version
          ibmcloud config --check-version=false
          ibmcloud plugin install -f kubernetes-service
          ibmcloud plugin install -f container-registry

      # Authenticate with IBM Cloud CLI
      - name: Authenticate with IBM Cloud CLI
        run: |
          ibmcloud login --apikey "${IBM_CLOUD_APIKEY}" -r "${IBM_CLOUD_REGION}" -g "${IBM_CLOUD_RESOURCE_GROUP}"
          ibmcloud cr region-set "${IBM_CLOUD_REGION}"
          ibmcloud cr login

      # Build the Docker image
      - name: Build with Docker
        run: |
          docker build -t "$REGISTRY_HOSTNAME"/"$ICR_NAMESPACE"/"$IMAGE_NAME":"$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" .

      # Push the image to IBM Container Registry
      - name: Push the image to ICR
        run: |
          docker push $REGISTRY_HOSTNAME/$ICR_NAMESPACE/$IMAGE_NAME:$GITHUB_SHA

  # pact_test:
  #   runs-on: ubuntu-latest
  #   needs: [eslint-verify, prettier-verify]

  #   steps:
  #     - uses: actions/setup-node@master
  #     - name: Run Pact tests
  #       uses: actions/checkout@master
  #     - run: touch .env
  #     - run: npm ci
  #     - run: npm run test:api:consumer
  #     - run: npm run publish:pact
  #     - run: export CI=true && npm run test:api:provider

  # build_image:
  #   runs-on: ubuntu-latest
  #   needs: [pact_test, test_and_coverage, detect-secrets, commitlint, snyk_test]
  #   steps:
  #     - name: Build and Publish image
  #       uses: actions/checkout@master
  #     - run: touch .env
  #     - run: ./scripts/buildAndPublish.sh

  # deploy_image:
  #   runs-on: ubuntu-latest
  #   needs: [build_image]
  #   steps:
  #     - name: Deploy the images
  #       uses: actions/checkout@master
  #     - run: ./scripts/deploy.sh

  # smoke_test:
  #   runs-on: ubuntu-latest
  #   needs: [deploy_image]
  #   steps:
  #     - uses: actions/setup-node@master
  #     - name: Smoke test using pact tests
  #       uses: actions/checkout@master
  #     - run: touch .env
  #     - run: npm ci
  #     - run: export SMOKE_TEST=true && npm run test:api:provider -- --collectCoverage=false

  # snyk_monitor:
  #   runs-on: ubuntu-latest
  #   needs: [deploy_image]

  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Use Node.js 18.16.0
  #       uses: snyk/actions/node@master
  #       env:
  #         # In order to use the Snyk Action you will need to have a Snyk API token.
  #         # More details in https://{{cookiecutter.github_url}}/snyk/actions#getting-your-snyk-token
  #         # or you can signup for free at https://snyk.io/login
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #       with:
  #         command: monitor

  # prune_image:
  #   name: Prune the old image
  #   runs-on: ubuntu-latest
  #   needs: [smoke_test]
  #   steps:
  #     - name: Run script to prune the old image
  #       uses: actions/checkout@master
  #     - run: ./scripts/prune_images.sh
